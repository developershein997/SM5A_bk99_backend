<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('two_bets', function (Blueprint $table) {
            $table->id();

            // Foreign key to users table
            $table->foreignId('user_id')->constrained('users')->onDelete('cascade');
            // 'member_name' removed as it's redundant and can be accessed via user_id relationship
            $table->string('member_name')->nullable();
            // Foreign key to battles table
            $table->foreignId('bettle_id')->nullable()->constrained('battles')->onDelete('set null');
            // 'session' enum removed as bettle_id already defines the session

            // Foreign key to choose_digits table
            $table->foreignId('choose_digit_id')->nullable()->constrained('choose_digits')->onDelete('set null');

            // Foreign key to head_closes table
            $table->foreignId('head_close_id')->nullable()->constrained('head_closes')->onDelete('set null');

            // Foreign key to agents table (assuming you have an 'agents' table)
            $table->foreignId('agent_id')->nullable()->constrained('users')->onDelete('set null');

            $table->string('bet_number'); // The 2-digit number (e.g., '05', '99')
            $table->decimal('bet_amount', 10, 2);

            //$table->decimal('total_bet_amount', 10, 2)->default(0);
            $table->enum('session', ['morning', 'evening']);
            $table->boolean('win_lose')->default(false);
            // 'potential_payout' for clarity if it's the winning amount

            $table->decimal('potential_payout', 10, 2)->default(0);

            $table->boolean('bet_status')->default(false)->comment('false: pending, true: settled');
            $table->string('bet_result')->nullable()->comment('Stores winning number or outcome message');
            // 'win_lose' boolean removed, use bet_result or derive from bet_result and potential_payout

            // 'game_date' and 'game_time' to explicitly store the game session's date and time (not when bet was placed)
            $table->date('game_date'); // Date of the betting session (e.g., today's date for morning/evening)
            $table->time('game_time'); // Time of the betting session (e.g., '12:00:00' for morning, '16:30:00' for evening)

            //$table->string('slip_no')->default('0'); // Must be unique, generate dynamically
            // 'slip_no' default removed as it needs to be unique and generated by app
            $table->unsignedBigInteger('slip_id');
           // $table->decimal('before_balance', 10, 2)->nullable();
            // $table->decimal('after_balance', 10, 2)->nullable();

            $table->timestamps();
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('two_bets');
    }
};
